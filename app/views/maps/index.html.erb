<div class="containermb-2 mt-5 mb-5">
  <header>
  <div class="search_map_container">
        <%# 検索したい住所や場所を入力するテキストボックス %>
     <input id="search_address" type="textbox" value="">
        <%# 処理を行うボタン %>
    <input id="search_address_button", type="button" value="検索" onclick="codeAddress()">
      <div>
          <%# 住所を表示する %>
        <div id="result_address">住所が表示されます</div>
      </div>
        <%# 地図を表示する %>
      <div id='search_map'></div>
  </div>
  <div class="books-container">
    <% @tags.each do |tag| %>
      <div class="">
         <%= @tag %>
      </div>

    <% end %>
  </div>
</header>
  <!-- app/views/maps/show.html.erb -->
    <div id="map" class="show-map"></div>
      <div id="modal" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%); background-color:white; padding:20px; box-shadow:0 0 10px rgba(0,0,0,0.5);">
          <%= render 'form', map: @map %>
          <button onclick="closeModal()">Close</button>
      </div>

      <script>
        var map;
        var geocoder; // Geocoder
        var currentMarker;
        var taggedPosts = <%= @tagged_posts_info.to_json.html_safe %>;


        function initMap() {
          var center = {
            lat: 35.6895,
            lng: 139.6917
          }; // 東京の緯度経度
          map = new google.maps.Map(document.getElementById('map'), {
            center: center,
            zoom: 10
          });
          var maps = <%= @maps.to_json.html_safe %>;
          maps.forEach(function(mapData) {
              var latLng = new google.maps.LatLng(mapData.lat, mapData.lng);

              var marker = new google.maps.Marker({
                  position: latLng,
                  map: map
              });

              // InfoWindowのコンテンツを設定
              var infoWindowContent = `
                <div class="custom-info">
                    <div class="custom-info-item name">${mapData.address}</div>
                    <div class="custom-info-item name">
                        <a href="/maps/${mapData.id}">${mapData.title}</a>
                    </div>
                    <a data-confirm="Are you sure?" rel="nofollow" data-method="delete" href="/maps/${mapData.id}">destory</a>
                </div>`;

              var infoWindow = new google.maps.InfoWindow({
                  content: infoWindowContent
              });

              // マーカーのクリックイベントにリスナーを追加してInfoWindowを表示
              marker.addListener('click', function() {
                  infoWindow.open(map, marker);
              });
          });

          geocoder = new google.maps.Geocoder(); // Geocoder初期化
          google.maps.event.addListener(map, 'click', function(event) {
            placeMarker(event.latLng);
          });

        }
        <%# ボタンを押した時の処理 %>
          function codeAddress(){
            <%# 検索したいアドレスを取得 %>
            let inputAddress = document.getElementById('search_address').value;

            geocoder.geocode( { 'address': inputAddress}, function(results, status) {
              if (status == 'OK') {
                <%# マップを表示
                map.setCenter(results[0].geometry.location);
                <%# 検索で得られた住所を取得 %>
                result_address = results[0].formatted_address;
                <%# 取得した住所を表示 %>
                document.getElementById('result_address').textContent = result_address
                <%# マーカーを表示 %>
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
                var infoWindowContent = `
                <div class="custom-info">
                    <div class="custom-info-item name">${result_address}</div>
                    <div class="custom-info-item name">

                    </div>

                </div>`;

              var infoWindow = new google.maps.InfoWindow({
                  content: infoWindowContent
              });

              // マーカーのクリックイベントにリスナーを追加してInfoWindowを表示
              marker.addListener('click', function() {
                  infoWindow.open(map, marker);
              });

              placeMarker(results[0].geometry.location)
                map.setCenter(results[0].geometry.location)
                map.setZoom(17)

              } else {
                alert('該当する結果がありませんでした：' + status);
              }
            });
          }

        function placeMarker(location) {
          const target = document.getElementById('modal');
          const style = window.getComputedStyle(target);
          console.log(target);
          const status = style.getPropertyValue('display') === "block";　//ディスプレイで表示したブロックに対応するためのコード群（上から３つまで参考）
          if (status) {
            return;                             //returnはこのコードが実行されている際にはreturn以下に書いてあるコードの効果を無効にする　＝ポップアップ作業中は地図にピンをさせなくなる
          }
          if (currentMarker != null) {
            currentMarker.setMap(null)
          }
          currentMarker = new google.maps.Marker({
            position: location,
            map: map
          });

          geocoder.geocode({"location": location}, function(results, status) {
            if (status === "OK" && results[0]) {
              var address = results[0].formatted_address;
              document.getElementById('map_address').value = address;
              var infoWindow = new google.maps.InfoWindow({
                content: `
                <div class="custom-info">
                  <div class="custom-info-item name">${address}</div>
                </div>
                <button id="popupbutton">open!</button>
                `
              });
              currentMarker.addListener('click', function() {
                infoWindow.open(map, currentMarker);
                console.log('here');
                // Add the event listener after the InfoWindow is opened
                google.maps.event.addListenerOnce(infoWindow, 'domready', function(){
                  document.getElementById('popupbutton').addEventListener('click', openModal);
                  // click -> openModal()
                });
              });
            } else {
              alert("Geocode was not successful for the following reason:" + status);
            }
          });

          // タグの絞り込み機能
          // taggedPosts.forEach(function(mapData) {
          //   var latLng = new google.maps.LatLng(mapData.lat, mapData.lng);

          //   var marker = new google.maps.Marker({
          //     position: latLng,
          //     map: map
          //   });

          // 緯度経度をhidden_fieldにセット、consoleは取得取得している緯度・経度を表示している
          console.log(location.lat())
          console.log(location.lng())
          document.getElementById('map_lat').value = location.lat();
          document.getElementById('map_lng').value = location.lng();
          //markers.push(marker);
        }


      // ディスプレイのポップアップをブロックとして表示する
        function openModal() {
          //document.getElementById('modal').style.display = 'block';
          console.log("確認")
          document.getElementById('modal').style.display = 'block';
        }

      // ディスプレイのポップアップを非表示にする
        function closeModal() {
          document.getElementById('modal').style.display = 'none';
        }

      </script>
      <!-- ここでGoogle Maps JavaScript APIを読み込み -->
      <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7JXfKdyGbC5w6U1mZljK1ii619BA3mr0&libraries=places&callback=initMap" async defer></script>
</div>

<footer>

</footer>